version: "3.0"
name: "connectify"
services:
    # LOAD BALANCER
    gateway:
        image: nginx
        container_name: gateway
        volumes:
            - ./nginx/conf:/etc/nginx/conf.d/
        ports:
            - 8080:80
        deploy:
        networks:       
            - internal
        depends_on:
            - primary_manager
            - readonly_manager
        environment:
            - COMPOSE_PROJECT_NAME
    
    # PRIMARY MANAGER
    primary_manager:
        image: connectify/primary_manager
        build: ./primary_manager
        container_name: primary
        hostname: primary
        deploy:
        networks:       
            - internal
        environment:
            - DB_NAME=prime_datadb
            - READ_REPLICAS=3 # same as replicas of read only managers
            - COMPOSE_PROJECT_NAME 
            - REDIS_CLUSTER_NODES=172.24.0.31:6373,172.24.0.32:6374,172.24.0.33:6375,172.24.0.34:6376,172.24.0.35:6377,172.24.0.36:6378
        entrypoint: python3
        command: app.py
        depends_on:
            - redis-cluster

    # READ ONLY MANAGERS
    readonly_manager:
        image: connectify/readonly_manager
        build: ./readonly_manager
        deploy:
            replicas: 3
        networks:       
            - internal
        environment:
            - DB_NAME=prime_datadb
            - COMPOSE_PROJECT_NAME 
            - REDIS_CLUSTER_NODES=172.24.0.31:6373,172.24.0.32:6374,172.24.0.33:6375,172.24.0.34:6376,172.24.0.35:6377,172.24.0.36:6378
        entrypoint: python3
        command: app.py
        depends_on: 
            - primary_manager

    # BROKERS
     
    #     Template to add new broker 
    #     broker-<id>:
    #         image : connectify/broker
    #         build : ./broker
    #         container_name : broker-<id>
    #         networks : internal
    
    broker-1:
        image: connectify/broker
        build: ./broker
        container_name: broker-1
        restart: always
        hostname: broker-1
        volumes:
            - ./broker/journal/broker-1/:/app/journal/
        depends_on:
            - brokerdb-1
        environment:
            - WRITE_DB_NAME=brokerdb-1
            - COMPOSE_PROJECT_NAME 
        entrypoint: python3
        command: app.py
        networks:
            internal:
                ipv4_address: 172.24.0.18

    broker-2: 
        image: connectify/broker
        build: ./broker
        container_name: broker-2
        restart: always
        hostname: broker-2
        volumes:
            - ./broker/journal/broker-2/:/app/journal/
        depends_on:
            - brokerdb-2
        environment:
            - WRITE_DB_NAME=brokerdb-2
            - COMPOSE_PROJECT_NAME 
        entrypoint: python3
        command: app.py
        networks:
            internal:
                ipv4_address: 172.24.0.19
    
    broker-3: 
        image: connectify/broker
        build: ./broker
        container_name: broker-3
        restart: always
        hostname: broker-3
        volumes:
            - ./broker/journal/broker-3/:/app/journal/
        depends_on:
            - brokerdb-3
        environment:
            - WRITE_DB_NAME=brokerdb-3
            - COMPOSE_PROJECT_NAME 
        networks:
            internal:
                ipv4_address: 172.24.0.20
    
    # MASTER DATABASES

    brokerdb-1:
        image: postgres:13
        container_name: brokerdb-1
        restart: always
        volumes:
                - ./database_volumes/brokerdb_1_data:/var/lib/postgresql/data
        hostname: brokerdb-1
        environment:
                - POSTGRES_USER=postgres
                - POSTGRES_PASSWORD=postgres
                - POSTGRES_DB=brokerdb-1
                - COMPOSE_PROJECT_NAME 
        networks:       
            - internal
        
    brokerdb-2:
        image: postgres:13
        container_name: brokerdb-2
        restart: always
        volumes:
                - ./database_volumes/brokerdb_2_data:/var/lib/postgresql/data
        hostname: brokerdb-2
        environment:
                - POSTGRES_USER=postgres
                - POSTGRES_PASSWORD=postgres
                - POSTGRES_DB=brokerdb-2
                - COMPOSE_PROJECT_NAME 
        networks:       
            - internal
    
    brokerdb-3:
        image: postgres:13
        container_name: brokerdb-3
        restart: always
        volumes:
                - ./database_volumes/brokerdb_3_data:/var/lib/postgresql/data
        hostname: brokerdb-3
        environment:
                - POSTGRES_USER=postgres
                - POSTGRES_PASSWORD=postgres
                - POSTGRES_DB=brokerdb-3
                - COMPOSE_PROJECT_NAME 
        networks:       
            - internal

    # REDIS
    redis-cluster:
        image: 'redis:6.2.0-alpine'
        command: redis-cli --cluster create 172.24.0.31:6373 172.24.0.32:6374 172.24.0.33:6375 172.24.0.34:6376 172.24.0.35:6377 172.24.0.36:6378 --cluster-replicas 1 --cluster-yes
        networks:
            internal:
                ipv4_address: 172.24.0.30
        depends_on:
            - redis-node-1
            - redis-node-2
            - redis-node-3
            - redis-node-4
            - redis-node-5
            - redis-node-6
    
    redis-node-1:
        image: 'redis:6.2.0-alpine'
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - '6373:6373'
        volumes:
            - ./redis_volumes/redis-node-1-data:/var/lib/redis
            - ./redis/redis-node-1.conf:/usr/local/etc/redis/redis.conf
        networks:
            internal:
                ipv4_address: 172.24.0.31
    redis-node-2:
        image: 'redis:6.2.0-alpine'
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - '6374:6374'
        volumes:
            - ./redis_volumes/redis-node-2-data:/var/lib/redis
            - ./redis/redis-node-2.conf:/usr/local/etc/redis/redis.conf
        networks:
            internal:
                ipv4_address: 172.24.0.32
    redis-node-3:
        image: 'redis:6.2.0-alpine'
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - '6375:6375'
        volumes:
            - ./redis_volumes/redis-node-3-data:/var/lib/redis
            - ./redis/redis-node-3.conf:/usr/local/etc/redis/redis.conf
        networks:
            internal:
                ipv4_address: 172.24.0.33
    redis-node-4:
        image: 'redis:6.2.0-alpine'
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - '6376:6376'
        volumes:
            - ./redis_volumes/redis-node-4-data:/var/lib/redis
            - ./redis/redis-node-4.conf:/usr/local/etc/redis/redis.conf
        networks:
            internal:
                ipv4_address: 172.24.0.34
    redis-node-5:
        image: 'redis:6.2.0-alpine'
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - '6377:6377'
        volumes:
            - ./redis_volumes/redis-node-5-data:/var/lib/redis
            - ./redis/redis-node-5.conf:/usr/local/etc/redis/redis.conf
        networks:
            internal:
                ipv4_address: 172.24.0.35
    redis-node-6:
        image: 'redis:6.2.0-alpine'
        command: redis-server /usr/local/etc/redis/redis.conf
        ports:
            - '6378:6378'
        volumes:
            - ./redis_volumes/redis-node-6-data:/var/lib/redis
            - ./redis/redis-node-6.conf:/usr/local/etc/redis/redis.conf
        networks:
            internal:
                ipv4_address: 172.24.0.36

networks:
    internal:
        driver: bridge
        ipam:
            config:
                - subnet: 172.24.0.0/16
